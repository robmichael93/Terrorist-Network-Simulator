/*
 * RequestArmsTicket.java
 *
 * Created on March 2, 2003, 8:44 PM
 */

package tns.tickets;
import mil.navy.nps.relate.*;
import tns.agents.*;
import tns.actions.*;
import tns.roles.*;
import tns.connectors.*;
import tns.frames.*;
import tns.messages.*;
import java.util.*;

/**
 *
 * @author  Rob Michael
 */
public class RequestArmsTicket extends Ticket {
    
    /** 
     * Creates a new instance of RequestArmsTicket 
     * @param role The role that owns this ticket.
     */
    public RequestArmsTicket(Role role) {
        super(role, "RequestArmsTicket", true);
        
        addFrame(new IncrementStuckCounterAction(role));
        Mission mission = ((LeaderRole)role).getMission();
        if (!mission.hasNeededOperators()) {
            addFrame(new IncrementGetOperatorsStuckCounterAction(role));
        } // end if
        Vector connectors = ((TNSRole)role).getConnectors();
        Enumeration e = connectors.elements();
        while (e.hasMoreElements()) {
            Connector c = (Connector)e.nextElement();
            if (c instanceof RequestArmsConnector) {
                ((RequestArmsConnector)c).associateTicket(this);
                addFrame(new ExtendRetractConnectorAction(c));
            } // end if
        } // end while
        Agent leader = ((TNSRole)role).getAgent();
        Class[] argumentTypes = {Agent.class, String.class, String.class, int.class};
        Object[] arguments = {leader, "ArmsDealerRole", "GetResourceTicket", new Integer(Message.GET_RESOURCE_MESSAGE)};
        addFrame(new PutMessageInOutboxAction(leader, "GetResourceMessage", argumentTypes, arguments));
    }
    
}
