package com.armygame.recruits.xml.parsestates;





/**


 * Title: FrameImageIndex


 * Description: Auto generated concrete <code>DocumentParseState</code>


 * Copyright:    Copyright (c) 2001


 * Company:


 * @author Neal Elzenga (Auto Generated)


 * @version 1.0


 */


import org.xml.sax.Attributes;


import com.armygame.recruits.xml.ParserStateMachine;


import com.armygame.recruits.xml.DocumentParseState;


import com.armygame.recruits.xml.StringArgument;





/**


 * Class for handling XML FrameImageIndex tags.  This class is a <b>Singleton</b>


 * (see 'Design Patterns' - Gamma et. al)


 * <b>IMPORTANT NOTE:</b> This class was auto generated by the


 * <b>MakeStates</b> tool, and requires user customization of the


 * following methods:


 * <code>InitializeState()</code>, <code>StartElement()</code>,


 * <code>EndElement</code>, <code>Characters</code>


 */


public class FrameImageIndex extends DocumentParseState {





  /**


   * The single FrameImageIndex


   */


  private static FrameImageIndex theirInstance = null;





  /**


   * The constructor is <code>private</code> to enforce <b>Singleton</b>


   * behavior


   */


  private FrameImageIndex() {


  }





  /**


   * Return the FrameImageIndex <b>Singleton</b>


   * @return The FrameImageIndex <b>Singleton</b>


   */


  public static FrameImageIndex Instance() {


    if( theirInstance == null ) {


      theirInstance = new FrameImageIndex();


    }


    return theirInstance;


  }





  /**


   * This state is called when a <b>&lt;FrameImageIndex&gt;</b> element is parsed.


   * @param context The <code>ParserStateMachine</code> that is managing our parsing


   */


  public void InitializeState( ParserStateMachine context ) {


    // Example - context.AddConstructionTask( new ConstructionMethodCall( "SetPrincipleVersion", new Class[] { int.class, int.class, int.class } ) );


  }





  /**


   * This state is called when we start a sub-element of state FrameImageIndex


   * @param context The <code>ParserStateMachine</code> that is managing our parsing


   * @param uri


   * @param localName


   * @param qName


   * @param atts


   * @see org.xml.SAX#startElement()


   */


  public void StartElement( ParserStateMachine context, String uri, String localName, String qName, Attributes atts ) {


    ChangeState( context, qName );


  }





  /**


   * This state is called when we get the end element for state FrameImageIndex


   * @param context The <code>ParserStateMachine</code> that is managing our parsing


   * @param uri


   * @param localName


   * @param qName


   * @see org.xml.SAX#endElement()


   */


  public void EndElement( ParserStateMachine context, String uri, String localName, String qName ) {


    // Example - context.AddConstructionTask( new IntArgument( context.CharBufferToInt() ) );


    context.AddConstructionTask( new StringArgument( context.GetCharBuffer() ) );


  }





  /**


   * This state is called when SAX generates a <code>characters</code> event while in state FrameImageIndex


   * @param context The <code>ParserStateMachine</code> that is managing our parsing


   * @param ch


   * @param start


   * @param length


   * @see org.xml.SAX#characters()


   */


  public void Characters( ParserStateMachine context, char[] ch, int start, int length ) {


    context.AddCharsToBuffer( ch, start, length );


  }





}


