/**
 * Title: Byte
 * Description: Auto generated concrete <code>DocumentParseState</code>
 * Copyright:    Copyright (c) 2001
 * Company:
 * @author Neal Elzenga (Auto Generated)
 * @version 1.0
 */
package com.armygame.recruits.xml.parsestates;

import org.xml.sax.Attributes;
import com.armygame.recruits.xml.ParserStateMachine;
import com.armygame.recruits.xml.DocumentParseState;
import com.armygame.recruits.xml.ConstructionMethodCall;
import com.armygame.recruits.xml.EndMethodCallSentinel;
import com.armygame.recruits.xml.ByteArgument;

/**
 * Class for handling XML Byte tags.  This class is a <b>Singleton</b>
 * (see 'Design Patterns' - Gamma et. al)
 * <b>IMPORTANT NOTE:</b> This class was auto generated by the
 * <b>MakeStates</b> tool, and requires user customization of the
 * following methods:
 * <code>InitializeState()</code>, <code>StartElement()</code>,
 * <code>EndElement</code>, <code>Characters</code>
 */
public class Byte extends DocumentParseState {

  /**
   * The single Byte
   */
  private static Byte theirInstance = null;

  /**
   * The constructor is <code>private</code> to enforce <b>Singleton</b>
   * behavior
   */
  private Byte() {
    super();
  }

  /**
   * Return the Byte <b>Singleton</b>
   * @return The Byte <b>Singleton</b>
   */
  public static Byte Instance() {
    if( theirInstance == null ) {
      theirInstance = new Byte();
    }
    return theirInstance;
  }

  /**
   * This state is called when a <b>&lt;Byte&gt;</b> element is parsed.
   * @param context The <code>ParserStateMachine</code> that is managing our parsing
   */
  public void InitializeState( ParserStateMachine context ) {
    context.AddConstructionTask( new ConstructionMethodCall( "SetCurrentRangeFromByte", new Class[] { byte.class } ) );
  }


  /**
   * This state is called when we get the end element for state Byte
   * @param context The <code>ParserStateMachine</code> that is managing our parsing
   * @param uri
   * @param localName
   * @param qName
   * @see org.xml.SAX#endElement()
   */
  public void EndElement( ParserStateMachine context, String uri, String localName, String qName ) {
    context.AddConstructionTask( new ByteArgument( context.CharBufferToByte() ) );
    context.AddConstructionTask( new EndMethodCallSentinel() );
  }

}
